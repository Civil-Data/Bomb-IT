name: Build and tests 🎮

on: workflow_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} ✨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
          
    permissions: write-all
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      - name: Run tests
        uses: game-ci/unity-test-runner@v2.1.1
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}

  super-lint:
      # Name the Job
      name: Lint code base
      # Set the type of machine to run on
      runs-on: ubuntu-latest  

      permissions: write-all

      steps:
        - uses: actions/checkout@v3
        - run: git pull
        - run: dotnet tool install -g dotnet-format
        - name: format
          run: dotnet-format -f Assets/ -v d
          working-directory: ${{env.working-directory}}
        - name: Commit changes
          uses: EndBug/add-and-commit@v5
          with:
            message: "[Bot] Automated dotnet-format update"
            add: "*.cs"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  buildWindows:
      needs: testRunner
      name: Build for Windows 🖥️
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v2
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard
        - name: Restore Library cache
          uses: actions/cache@v2
          with:
            path: Library
            key: Library-build-StandaloneWindows64
            restore-keys: |
              Library-build-
              Library-
        - uses: game-ci/unity-builder@v2
          with:
            targetPlatform: StandaloneWindows64

        - uses: actions/upload-artifact@v2
          with:
            name: build-StandaloneWindows64
            path: build/StandaloneWindows64
